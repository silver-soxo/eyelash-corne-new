#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hrm_left: hrm_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 20 21 22 35 36 45 46 47 8 9 10 11 12 23 24 25 26 27 37 38 39 40 41 19 34 44 43 42>;
        };

        hrm_right: hrm_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33 34 42 43 44 19 20 21 35 6 45 46 47>;
        };

        layer_tap: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            tapping-term-ms = <170>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    macros {
        less_than: less_than {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_6 &kp KP_NUMBER_0>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "LESS_THAN";
        };

         greater_than: greater_than {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_6 &kp KP_NUMBER_2>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "GREATER_THAN";
        };

        letf_brace: letf_brace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_3>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "LETF_BRACE";
        };

        right_brace: right_brace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_5>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "RIGHT_BRACE";
        };

        letf_barcket: letf_barcket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_9 &kp KP_NUMBER_1>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "LETF_BARCKET";
        };

        right_bracket: right_bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_9 &kp KP_NUMBER_3>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "RIGHT_BRACKET";
        };

        slash: slash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_4 &kp KP_NUMBER_7>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "SLASH";
        };

        back_slash: back_slash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_9 &kp KP_NUMBER_2>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "BACK_SLASH";
        };

        at_sign: at_sign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_6 &kp KP_NUMBER_4>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "AT_SIGN";
        };

        hash_sign: hash_sign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_3 &kp KP_NUMBER_5>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "HASH_SIGN";
        };

        dollar_sign: dollar_sign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_3 &kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "DOLLAR_SIGN";
        };

        caret_sign: caret_sign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_9 &kp KP_NUMBER_4>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "CARET_SIGN";
        };

        ask_sign: ask_sign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_6 &kp KP_NUMBER_3>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "ASK_SIGN";
        };

        ampersant_sign: ampersant_sign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_3 &kp KP_NUMBER_8>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "AMPERSANT_SIGN";
        };

        double_quotes: double_quotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_3 &kp KP_NUMBER_4>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "DOUBLE_QUOTES";
        };

        single_quote: single_quote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_3 &kp KP_NUMBER_9>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "SINGLE_QUOTE";
        };

        pipe_sign: pipe_sign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_4>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "PIPE_SIGN";
        };

        tilde_sign: tilde_sign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "TILDE_SIGN";
        };

        grave_sign: grave_sign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_9 &kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "GRAVE_SIGN";
        };

        slash_sign: slash_sign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_4 &kp KP_NUMBER_7>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "SLASH_SIGN";
        };

        semicolon_sign: semicolon_sign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_5 &kp KP_NUMBER_8>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "SEMICOLON_SIGN";
        };

        colon_sign: colon_sign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_5 &kp KP_NUMBER_9>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "COLON_SIGN";
        };

        switch_lang: switch_lang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp LEFT_SHIFT>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "SWITCH_LANG";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            display-name = "QWERTY";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E             &kp R  &kp T                                   &mmv MOVE_UP                     &kp Y               &kp U               &kp I               &kp O              &kp P                 &kp MINUS
&kp CAPS        &kp A  &kp S  &kp D             &kp F  &kp G                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp H               &hrm_right RSHFT J  &hrm_right RCTRL K  &hrm_right RALT L  &hrm_right RGUI SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C             &kp V  &kp B      &kp SPACE                    &mmv MOVE_DOWN                   &kp N               &kp M               &kp COMMA           &kp DOT            &kp FSLH              &kp TAB
                              &kp LEFT_CONTROL  &mo 1  &kp SPACE                                                                &layer_tap 3 SPACE  &layer_tap 0 ENTER  &layer_tap 0 TAB
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        colemak {
            display-name = "COLEMAK";
            bindings = <
&kp GRAVE       &kp Q             &kp W             &kp F                &kp P              &kp B                                          &kp UP                &kp J               &kp L               &kp U               &kp Y              &kp APOS           &kp MINUS
&caps_word      &hrm_left LGUI A  &hrm_left LALT R  &hrm_left LCTRL S    &hrm_left LSHFT T  &kp G                                &kp LEFT  &kp ENTER  &kp RIGHT  &kp M               &hrm_right RSHFT N  &hrm_right RCTRL E  &hrm_right RALT I  &hrm_right RGUI O  &kp SEMI
&kp LEFT_SHIFT  &kp Z             &kp X             &kp C                &kp D              &kp V                   &kp SPACE              &kp DOWN              &kp K               &kp H               &kp COMMA           &kp DOT            &kp FSLH           &kp TAB
                                                    &layer_tap 0 DELETE  &none              &layer_tap 0 BACKSPACE                                               &layer_tap 3 SPACE  &mo 3               &layer_tap 0 TAB
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        engram {
            display-name = "ENGRAM";
            bindings = <
&kp GRAVE       &kp B             &kp Y             &kp O                &kp U              &kp APOS                                       &kp UP                &kp SEMI            &kp L               &kp D               &kp W              &kp V              &kp Z
&caps_word      &hrm_left LGUI C  &hrm_left LALT I  &hrm_left LCTRL E    &hrm_left LSHFT A  &kp COMMA                            &kp LEFT  &kp ENTER  &kp RIGHT  &kp DOT             &hrm_right RSHFT H  &hrm_right RCTRL T  &hrm_right RALT S  &hrm_right RGUI N  &kp Q
&kp LEFT_SHIFT  &kp G             &kp X             &kp J                &kp K              &kp MINUS               &kp SPACE              &kp DOWN              &kp FSLH            &kp R               &kp M               &kp F              &kp P              &kp TAB
                                                    &layer_tap 0 DELETE  &mo 3              &layer_tap 0 BACKSPACE                                               &layer_tap 3 SPACE  &layer_tap 0 ENTER  &layer_tap 0 TAB
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        symbol {
            bindings = <
&kp EXCLAMATION  &kp LEFT_BRACE  &kp SQT       &kp DOUBLE_QUOTES  &kp RIGHT_BRACE   &kp QUESTION                                     &mmv MOVE_UP                     &kp ENTER   &kp LS(TAB)           &kp TAB           &kp SPACE          &kp BACKSPACE          &kp PERCENT
&bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1  &kp UNDERSCORE     &kp DOLLAR        &kp ASTERISK                     &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PERIOD  &kp GRAVE             &kp AMPERSAND     &kp PLUS           &kp AT                 &kp COLON
&kp TILDE        &kp LESS_THAN   &kp PIPE      &kp MINUS          &kp GREATER_THAN  &kp SLASH      &kp SCROLLLOCK                    &mmv MOVE_DOWN                   &kp COMMA   &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
                                               &kp PERCENT        &kp COLON         &kp SEMICOLON                                                                     &trans      &trans                &trans
            >;

            label = "SYMBOL";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
